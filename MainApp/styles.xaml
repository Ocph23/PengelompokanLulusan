<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:MainApp" >


    <Style x:Key="baseStyle" TargetType="{x:Type Control}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>

    </Style>

    <!--Button-->
    <Style TargetType="{x:Type Button}" >
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Margin" Value="3"/>
    </Style>

    <Style x:Key="windowBtn" TargetType="{x:Type Button}" BasedOn="{StaticResource baseStyle}">
        <Setter Property="FontFamily" Value="Segoe Script"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="btnOK" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Background" Value="#15B35A"/>
    </Style>

    <Style x:Key="btnCancel" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Background" Value="#D83336"/>
        
    </Style>

    <Style x:Key="btnWarning" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Background" Value="orange"/>
        <Setter Property="Height" Value="55"/>
    </Style>
    <Style x:Key="btnInfo" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Background" Value="teal"/>
        <Setter Property="Height" Value="55"/>
    </Style>
    <Style x:Key="btnEclamation" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Background" Value="#cddc39"/>
        <Setter Property="Height" Value="55"/>
    </Style>
    <Style x:Key="btnRecomendation" TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey={x:Type Button}}">
        <Setter Property="Background" Value="#FF09739B"/>
        <Setter Property="Height" Value="55"/>
    </Style>

    <!--Label-->

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="formLabel" TargetType="{x:Type Label}" BasedOn="{StaticResource ResourceKey={x:Type Label}}">
        <Setter Property="Foreground" Value="#FF939393"/>
    </Style>

    <Style x:Key="menuHeader" TargetType="{x:Type Label}" BasedOn="{StaticResource ResourceKey={x:Type Label}}">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Margin" Value="5,1,1,1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="8" ShadowDepth="1" Color="#FF595757"/>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key='headerTitle' TargetType="{x:Type Label}" BasedOn="{StaticResource ResourceKey={x:Type Label}}">
        <Setter Property="FontFamily" Value="segoe script"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="Foreground" Value="#E17D22"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="labelError" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#ff4569"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>


    <!--TexBox-->

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="VerticalContentAlignment" Value="center"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="5,8"/>
        <Setter Property="Margin" Value="2"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.2"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Border BorderThickness="0.8" BorderBrush="Red">
                            <StackPanel>
                                <AdornedElementPlaceholder
                                x:Name="errorControl" />
                            </StackPanel>
                        </Border>
                        <TextBlock FontSize="14" Text="{Binding AdornedElement.ToolTip
                        , ElementName=errorControl}" Foreground="#d50000" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="0.5" />
                <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}
                    , Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Padding" Value="5,8"/>
        <Setter Property="VerticalContentAlignment" Value="center"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="White" Opacity="0.2"/>
            </Setter.Value>
        </Setter>
    </Style>

    
   
    <!--Menu-->
    <Style  TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0 0 0 1 "/>
        <Setter Property="BorderBrush" Value="#FF474951"/>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Width" Value="200"/>

    </Style>
    <ControlTemplate x:Key="menuItem" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                    <Border  Margin="100,0,0,0" x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="#6739AA" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" 
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="#6739AA"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" Background="#343A50" BorderThickness="1" BorderBrush="Silver">
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Layout-->

    <Style x:Key="header" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#343A50"/>
    </Style>

    <Style x:Key="gridBase" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#3C435C"/>
    </Style>

    <Style x:Key="gridBaseForm" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="#FF4A526E"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" ShadowDepth="2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="leftSide" TargetType="{x:Type StackPanel}">
        <Setter Property="Background" Value="#343A50"/>
    </Style>

    <Style x:Key="formItem"  TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>


    <!--DataGrid-->
    <!--Selected color when the ComboBox is focused-->
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#6739AA" />
   
    <!--selected text-->
    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#E17D22" />
    <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#FF707070" Opacity="0.9"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0.7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6739AA"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="dataGridRowStyle1" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="17" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0.7" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#6739AA"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Height" Value="35" />
        <Setter Property="BorderBrush" Value="White" />
        <Setter Property="BorderThickness" Value="0.7" />
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" Margin="5"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
    <SolidColorBrush x:Key="GlyphBrush" Color="Silver" />
    <SolidColorBrush x:Key="bg" Color="White" Opacity="0.2"/>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
      x:Name="Border" 
      Grid.ColumnSpan="2"
      Background="{StaticResource bg}"
      BorderBrush="Silver" 
      BorderThickness="1" />
            <Border 
      Grid.Column="0"
      CornerRadius="2,0,0,2" 
      Margin="1" 
      Background="{StaticResource bg}" 
                
      BorderBrush="Silver"
      BorderThickness="0,0,1,0" />
            <Path 
      x:Name="Arrow"
      Grid.Column="1"     
      Fill="{StaticResource GlyphBrush}"
      HorizontalAlignment="Center"
      VerticalAlignment="Center" 
      Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter Property="Background"  Value="#6739AA"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{x:Null}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="Silver" />
                <Setter TargetName="Border" Property="BorderBrush" Value="Blue" />
                <Setter Property="Foreground" Value="White"/>
                <Setter TargetName="Arrow" Property="Fill" Value="Orange" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="Orange" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="Padding" Value="2,10"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
            Name="ToggleButton" 
            Template="{StaticResource ComboBoxToggleButton}" 
            Grid.Column="2" 
            Focusable="false"
            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
            Name="ContentSite"
            IsHitTestVisible="False" 
            Content="{TemplateBinding SelectionBoxItem}"
            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            Margin="3,3,23,3"
            VerticalAlignment="Center"
            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
            Style="{x:Null}" 
            Template="{StaticResource ComboBoxTextBox}" 
            HorizontalAlignment="Left" 
            VerticalAlignment="Center" 
            Margin="3,3,23,3"
            Focusable="True" 
            Background="Transparent"
            Visibility="Hidden"
            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
            Name="Popup"
            Placement="Bottom"
            IsOpen="{TemplateBinding IsDropDownOpen}"
            AllowsTransparency="True" 
            Focusable="False"
            PopupAnimation="Slide">
                            <Grid 
              Name="DropDown"
              SnapsToDevicePixels="True"                
              MinWidth="{TemplateBinding ActualWidth}"
              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                x:Name="DropDownBorder"
                Background="#FF7E8392"
                BorderThickness="1"
                BorderBrush="{StaticResource bg}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="1"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"
               Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel>
                        <Border BorderThickness="1" BorderBrush="Red">
                            <StackPanel>
                                <AdornedElementPlaceholder
                                x:Name="errorControl" />
                            </StackPanel>
                        </Border>
                        <TextBlock FontSize="14" Text="{Binding AdornedElement.ToolTip
                        , ElementName=errorControl}" Foreground="Red" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="BorderBrush" Value="Red" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self}
                    , Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>